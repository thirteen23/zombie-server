#!/usr/bin/env node

const commander = require('commander');

const categories = require('./categories');
const companies = require('./companies');
const stations = require('./stations');
const companylinks = require('./company_links');
const pipelines = require('./pipelines');
const products = require('./products');
const grades = require('./grades');
const refineries = require('./refineries');
const terminals = require('./terminals');
const movements = require('./movements');
const paths = require('./paths');
const tanks = require('./tanks');

const nominataions = require('./nominations');
const pipelinemovements = require('./pipeline_movements');
const inventoryactual = require('./inventory_actual');
const inventoryforecast = require('./inventory_forecast');

commander
    .version('0.1.0')
    .option('-a, --all', 'Run all seed files')
    .option('-c, --categories', 'Seed categories')
    .option('-o, --companies', 'Seed companies')
    .option('-s, --stations', 'Seed stations')
    .option('-m, --companylinks', 'Seed company_links')
    .option('-p, --pipelines', 'Seed pipelines')
    .option('-d, --products', 'Seed products')
    // .option('-l, --locations', 'Seed refineries and terminals') // This will automatically get seeded. No need to seed?
    .option('-r, --refineries', 'Seed refineries')
    .option('-t, --terminals', 'Seed terminals')
    .option('-g, --grades', 'Seed grades')
    // .option('-e, --segments', 'Seed segments') // Having issues with coordinates column
    .option('-v, --movements', 'Seed movements')
    .option('-h, --paths', 'Seed paths') // Will not seed until FK segements table populates
    .option('-n, --tanks', 'Seed tanks')
    .option('-i, --nominataions', 'Seed nominations')
    .option('-n, --pipelinemovements', 'Seed pipeline_movements')
    .option('-y, --inventoryactual', 'Seed inventory_actual')
    .option('-f, --inventoryforecast', 'Seed inventory_forecast')

.parse(process.argv);

if (commander.all) {
    categories.seed();
    products.seed();
    grades.seed();
    companies.seed();
    refineries.seed();
    terminals.seed();
    process.nextTick(process.exit);
}
if (commander.categories) {
    categories.seed();
}
if (commander.companies) {
    companies.seed();
}
if (commander.stations) {
    stations.seed();
}
if (commander.companylinks) {
    companylinks.seed();
}
if (commander.pipelines) {
    pipelines.seed();
}
if (commander.products) {
    products.seed();
}
if (commander.refineries) {
    refineries.seed();
}
if (commander.terminals) {
    terminals.seed();
}
if (commander.grades) {
    grades.seed();
}
if (commander.movements) {
    movements.seed();
}
if (commander.paths) {
    paths.seed();
}
if (commander.tanks) {
    tanks.seed();
}
if (commander.nominataions) {
    nominataions.seed();
}
if (commander.pipelinemovements) {
    pipelinemovements.seed();
}
if (commander.inventoryactual) {
    inventoryactual.seed();
}
if (commander.inventoryforecast) {
    inventoryforecast.seed();
}